/**
 * @file The JavaScript SDK for the JetBrains AI Platform (Single-File Module).
 * @version 2.14.0 (Feature - Agentic Workflow Enhancements)
 * @author Lukáš Michna (Mobeetle)
 * @license Apache-2.0
 *
 * @description
 * This single .mjs file contains the complete, build-free SDK for interacting with the
 * JetBrains AI suite of Large Language Models (LLMs). It can be used directly in modern
 * Node.js environments.
 *
 * CHANGELOG:
 * - v2.14.0: Introduced a "glass-box" agentic workflow with a new `ChatSession.step()` async generator for fine-grained control over the tool-use loop. Refactored `run()` to use this new primitive and made `maxIterations` configurable.
 * - v2.13.0: Added the Task API for executing predefined, server-side tasks.
 * - v2.12.2: Patched a bug in the InternalHttpClient where the token refresh URL was being constructed incorrectly, causing a 404 error.
 * - v2.12.1: Major architectural refactor.
 * - v2.11.0: Implemented a robust parameter filtering system.
 */ import{EventEmitter as e}from"node:events";import{TextDecoderStream as t}from"node:stream/web";import{promises as r}from"node:fs";import{extname as a}from"node:path";import{Buffer as s}from"node:buffer";let AuthType={USER:"user",SERVICE:"service",APPLICATION:"application"},GatewayEndpoint={PRODUCTION:"https://api.jetbrains.ai"},LLMParameters={TEMPERATURE:{fqdn:"llm.parameters.temperature",type:"double"},TOP_P:{fqdn:"llm.parameters.top-p",type:"double"},TOP_K:{fqdn:"llm.parameters.top-k",type:"int"},LENGTH:{fqdn:"llm.parameters.length",type:"int"},STOP_TOKEN:{fqdn:"llm.parameters.stop-token",type:"text"},SEED:{fqdn:"llm.parameters.seed",type:"int"},RESPONSE_FORMAT:{fqdn:"llm.parameters.response-format",type:"json"},TOOLS:{fqdn:"llm.parameters.tools",type:"json"},TOOL_CHOICE_AUTO:{fqdn:"llm.parameters.tool-choice-auto",type:"bool"},TOOL_CHOICE_REQUIRED:{fqdn:"llm.parameters.tool-choice-required",type:"bool"},TOOL_CHOICE_NONE:{fqdn:"llm.parameters.tool-choice-none",type:"bool"},TOOL_CHOICE_NAMED:{fqdn:"llm.parameters.tool-choice-named",type:"json"},PARALLEL_TOOL_CALLS:{fqdn:"llm.parameters.parallel-tool-calls",type:"bool"},REASONING_EFFORT:{fqdn:"llm.parameters.reasoning-effort",type:"text"},PREDICTED_OUTPUT:{fqdn:"llm.parameters.predicted-output",type:"json"},CACHE_POINTS:{fqdn:"llm.parameters.cache-points",type:"json"},THINKING_BUDGET:{fqdn:"llm.parameters.thinking-budget",type:"int"},NUMBER_OF_CHOICES:{fqdn:"llm.parameters.number-of-choices",type:"int"},VERBOSITY:{fqdn:"llm.parameters.verbosity",type:"text"}},paramGroups={COMMON_TOOLS:["TOOLS","TOOL_CHOICE_NAMED","TOOL_CHOICE_AUTO","TOOL_CHOICE_REQUIRED","TOOL_CHOICE_NONE"].map(e=>LLMParameters[e].fqdn),OPENAI_GPT3_4:["TEMPERATURE","TOP_P","SEED","LENGTH","NUMBER_OF_CHOICES","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn),OPENAI_O_SERIES:["LENGTH","SEED","RESPONSE_FORMAT","REASONING_EFFORT","NUMBER_OF_CHOICES"].map(e=>LLMParameters[e].fqdn),OPENAI_GPT4_1:["TOP_P","LENGTH","SEED","TEMPERATURE","RESPONSE_FORMAT","NUMBER_OF_CHOICES","PREDICTED_OUTPUT","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn),OPENAI_GPT5:["LENGTH","RESPONSE_FORMAT","PARALLEL_TOOL_CALLS","REASONING_EFFORT","VERBOSITY"].map(e=>LLMParameters[e].fqdn),ANTHROPIC_CLAUDE3:["TEMPERATURE","TOP_K","TOP_P","STOP_TOKEN","LENGTH","TOOLS"].map(e=>LLMParameters[e].fqdn),ANTHROPIC_CLAUDE_PLUS:["TEMPERATURE","TOP_P","STOP_TOKEN","LENGTH","CACHE_POINTS","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_1_5_PRO:["TEMPERATURE","TOP_P","TOP_K","RESPONSE_FORMAT","LENGTH"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_1_5_FLASH:["TEMPERATURE","TOP_P","TOP_K","LENGTH"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_2_5_PRO:["TEMPERATURE","TOP_P","TOP_K","RESPONSE_FORMAT","LENGTH","THINKING_BUDGET","TOOLS"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_2_5_FLASH:["RESPONSE_FORMAT","TEMPERATURE","LENGTH","TOP_P","THINKING_BUDGET"].map(e=>LLMParameters[e].fqdn)},modelProfiles={"openai-chat-gpt":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS])},"openai-gpt-4":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS])},"openai-gpt-4-turbo":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS,LLMParameters.RESPONSE_FORMAT.fqdn])},"openai-gpt-4o":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS,LLMParameters.RESPONSE_FORMAT.fqdn,LLMParameters.PREDICTED_OUTPUT.fqdn])},"openai-gpt-4o-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS,LLMParameters.RESPONSE_FORMAT.fqdn,LLMParameters.PREDICTED_OUTPUT.fqdn])},"openai-o1":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-o1-mini":{provider:"OpenAI",params:new Set(["LENGTH","SEED","NUMBER_OF_CHOICES"].map(e=>LLMParameters[e].fqdn))},"openai-o3":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-o3-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-o4-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-gpt4.1":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT4_1,...paramGroups.COMMON_TOOLS])},"openai-gpt4.1-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT4_1,...paramGroups.COMMON_TOOLS])},"openai-gpt4.1-nano":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT4_1,...paramGroups.COMMON_TOOLS])},"openai-gpt-5":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},"openai-gpt-5-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},"openai-gpt-5-nano":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},Grazie_model_1:{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},Grazie_model_2:{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},"openai-instruct-gpt":{provider:"OpenAI",params:new Set([LLMParameters.TEMPERATURE.fqdn])},"openai-embedding-ada":{provider:"OpenAI",params:new Set},"openai-embedding-small":{provider:"OpenAI",params:new Set},"openai-embedding-large":{provider:"OpenAI",params:new Set},"anthropic-claude-3-haiku":{provider:"Anthropic",params:new Set(paramGroups.ANTHROPIC_CLAUDE3)},"anthropic-claude-3-opus":{provider:"Anthropic",params:new Set(paramGroups.ANTHROPIC_CLAUDE3)},"anthropic-claude-3.5-haiku":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-3.5-sonnet":{provider:"Anthropic",params:new Set(["TEMPERATURE","TOP_P","STOP_TOKEN","LENGTH","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn).concat(paramGroups.COMMON_TOOLS))},"anthropic-claude-3.7-sonnet":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-4-sonnet":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-4-opus":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-4.1-opus":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-pro-1.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_PRO,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-1.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_FLASH,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-2.0":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_PRO,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-lite-2.0":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_PRO,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-pro-2.5":{provider:"Google",params:new Set(paramGroups.GOOGLE_GEMINI_2_5_PRO)},"google-chat-gemini-flash-2.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_2_5_FLASH,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-lite-2.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_2_5_FLASH,...paramGroups.COMMON_TOOLS])}};export class APIError extends Error{constructor(e,t,r){super(e),this.name="APIError",this.status=t,this.details=r}}export class APIStatusError extends APIError{constructor(e,t,r){super(e,t,r),this.name="APIStatusError"}}export class SSEError extends APIError{constructor(e){super(e,void 0,void 0),this.name="SSEError"}}export function createUserMessage(e){return{type:"user_message",content:e}}export function createSystemMessage(e){return{type:"system_message",content:e}}export function createAssistantTextMessage(e){return{type:"assistant_message_text",content:e}}export function createAssistantToolCallMessage(e,t,r){return{type:"assistant_message_tool",id:e,toolName:t,content:r}}export function createToolResultMessage(e,t,r){return{type:"tool_message",id:e,toolName:t,result:r}}export async function createMediaMessage(e,t){let o,n;if("string"==typeof e){if(o=await r.readFile(e),t)n=t;else{let i=a(e).toLowerCase();n=({".png":"image/png",".jpg":"image/jpeg",".jpeg":"image/jpeg",".gif":"image/gif",".webp":"image/webp",".svg":"image/svg+xml"})[i]||"application/octet-stream"}}else if(s.isBuffer(e)){if(!t)throw Error("explicitMimeType is required when creating a media message from a Buffer.");o=e,n=t}else throw Error("source must be a file path (string) or a Buffer.");return{type:"media_message",mediaType:n,data:o.toString("base64")}}export async function executeTools(e,t){let r=new Map(t.map(e=>[e.name,e])),a=e.map(async e=>{let t=r.get(e.name);if(!t?.execute)return{name:e.name,success:!1,error:`Tool '${e.name}' not found.`};try{let a=JSON.parse(e.arguments||"{}"),s=await t.execute(a);return{name:e.name,success:!0,result:s}}catch(o){return{name:e.name,success:!1,error:o.message}}});return Promise.all(a)}class SSEParser{constructor(){this.finalizedToolCalls=[],this.toolCallsInProgress=new Map}parseLine(e){if(!e.startsWith("data: "))return null;let t=e.substring(6);if("end"===t.trim())return null;try{let r=JSON.parse(t);switch(r.type){case"Content":return{type:"text",content:r.content};case"ToolCall":let a=r.parallelToolIndex??0;this.toolCallsInProgress.has(a)||this.toolCallsInProgress.set(a,{id:null,name:null,arguments:""});let s=this.toolCallsInProgress.get(a);return r.id&&(s.id=r.id),r.name&&(s.name=r.name),r.content&&(s.arguments+=r.content),null;case"FinishMetadata":if(["tool_call","tool_calls","stop"].includes(r.reason)){let o=Array.from(this.toolCallsInProgress.entries()).sort(([e],[t])=>e-t).map(([,e])=>e);this.finalizedToolCalls.push(...o),this.toolCallsInProgress.clear()}return null;case"QuotaMetadata":return{type:"quota",data:r};default:return null}}catch(n){throw new SSEError(`Failed to parse SSE data chunk: ${n.message}`)}}getFinalResult(){return{toolCalls:this.finalizedToolCalls}}}class TaskSSEParser{parseLine(e){if(!e.startsWith("data: "))return null;let t=e.substring(6);if("end"===t.trim())return null;try{let r=JSON.parse(t),a=r.type;if(!a)return null;switch(a){case"Content":return{type:a,content:r.content};case"QuotaMetadata":case"ExecutionMetadata":case"FinishMetadata":case"UnknownMetadata":case"FunctionCallMetadata":return{type:a,data:r};default:return null}}catch(s){throw new SSEError(`Failed to parse Task SSE data chunk: ${s.message}`)}}}class InternalHttpClient{#a;#b;#c;constructor(e={},t){this.#c=t;let r=e.token??process.env.GRAZIE_JWT_TOKEN??process.env.GRAZIE_USER_JWT_TOKEN;if(!r)throw Error("An authentication token is required. Provide it via the `token` option or the GRAZIE_JWT_TOKEN environment variable.");this.#a=r;let a=e.authType??AuthType.USER,s=e.endpoint??GatewayEndpoint.PRODUCTION;this.#b=`${s}/${a}/v5`}getEventEmitter(){return this.#c}async _fetchWithRetry(e,t,r=!1){let a=`${this.#b}${e}`,s={"Content-Type":"application/json","Grazie-Agent":JSON.stringify({name:"js-library-client",version:"2.14.0"}),"Grazie-Authenticate-JWT":this.#a,...t.headers};this.#c.emit("api_request",{url:a,method:t.method,body:t.body});let o=await fetch(a,{...t,headers:s});if(this.#c.emit("api_response",{url:a,status:o.status,ok:o.ok}),!o.ok){if(401===o.status&&!r)try{this.#c.emit("token_refresh_start");let n=await this._refreshToken();return this.#a=n,this.#c.emit("token_refresh_success",n),this._fetchWithRetry(e,t,!0)}catch(i){throw this.#c.emit("error",i),i}let p;try{p=await o.json()}catch(l){p={message:"Failed to parse error response from API.",responseText:await o.text().catch(()=>"")}}let m=new APIStatusError(`API request failed with status ${o.status}`,o.status,p);throw this.#c.emit("error",m),m}if(!o.body){let O=new APIError("API returned a successful status but with an empty response body.",o.status,null);throw this.#c.emit("error",O),O}return o}async _refreshToken(){let e=`${this.#b}/auth/jwt/refresh/v3`,t={"Content-Type":"application/json","Grazie-Authenticate-JWT":this.#a},r=await fetch(e,{method:"POST",body:JSON.stringify({}),headers:t});if(!r.ok)throw new APIStatusError("Token refresh failed",r.status,await r.json().catch(()=>({})));let a=await r.json();if(!a.token)throw new APIError("Token refresh response did not contain a new token.",r.status,a);return a.token}}export class ParameterBuilder{#d={};temperature(e){return this.#d.TEMPERATURE=e,this}topP(e){return this.#d.TOP_P=e,this}topK(e){return this.#d.TOP_K=e,this}length(e){return this.#d.LENGTH=e,this}stopToken(e){return this.#d.STOP_TOKEN=e,this}seed(e){return this.#d.SEED=e,this}asJson(){return this.#d.RESPONSE_FORMAT={type:"json"},this}toolChoiceAuto(e=!0){return this.#d.TOOL_CHOICE_AUTO=e,this}toolChoiceRequired(e=!0){return this.#d.TOOL_CHOICE_REQUIRED=e,this}toolChoiceNone(e=!0){return this.#d.TOOL_CHOICE_NONE=e,this}toolChoiceNamed(e){return this.#d.TOOL_CHOICE_NAMED={type:"function",function:{name:e}},this}parallelToolCalls(e=!0){return this.#d.PARALLEL_TOOL_CALLS=e,this}reasoningEffort(e){return this.#d.REASONING_EFFORT=e,this}predictedOutput(e){return this.#d.PREDICTED_OUTPUT=e,this}cachePoints(e){return this.#d.CACHE_POINTS=e,this}thinkingBudget(e){return this.#d.THINKING_BUDGET=e,this}numberOfChoices(e){return this.#d.NUMBER_OF_CHOICES=e,this}verbosity(e){return this.#d.VERBOSITY=e,this}_build(){return this.#d}}export class ChatSession{#e;#f;#g=[];#h={};#i=null;constructor(e,t){this.#e=e,this.#f=t}withTools(e){return this.#g=e,this}withSystemMessage(e){return this.#i=e,this}withParameters(e){let t=new ParameterBuilder;return this.#h=e(t)._build(),this}async *stream(e){let r=Array.isArray(e)?e:[createUserMessage(e)],a=this.#j(r),s=await this.#e._fetchWithRetry("/llm/chat/stream/v8",{method:"POST",body:JSON.stringify(a)}),o=new SSEParser,n=s.body.pipeThrough(new t),i="";for await(let p of n){i+=p;let l=i.split("\n");for(let m of(i=l.pop()||"",l))if(m.trim()){let O=o.parseLine(m);O&&(yield O)}}if(i.trim()){let u=o.parseLine(i);u&&(yield u)}let E=o.getFinalResult();E.toolCalls.length>0&&(yield{type:"tool_calls",calls:E.toolCalls})}async *step(e,t={}){let r=this.#e.getEventEmitter(),a=this;t.forceTextResponse&&(a=new ChatSession(this.#e,this.#f).withTools(this.#g).withSystemMessage(this.#i).withParameters(e=>{let t=this.#h;for(let[r,a]of Object.entries(t)){let s=r.toLowerCase().replace(/_(\w)/g,(e,t)=>t.toUpperCase());"function"==typeof e[s]&&e[s](a)}return e.toolChoiceNone(!0)}));let s=a.stream(e),o=[],n="",i=[...e];for await(let p of s)"text"===p.type?n+=p.content:"tool_calls"===p.type&&(o=p.calls);if(o.length>0){r.emit("tool_start",{calls:o});let l=yield{type:"tool_request",calls:o};r.emit("tool_finish",{results:l}),l.forEach((e,t)=>{let r=o[t],a=e.success?e.result:{error:e.error||"Unknown execution error"};i.push(createAssistantToolCallMessage(r.id,r.name,r.arguments)),i.push(createToolResultMessage(r.id,r.name,JSON.stringify(a)))})}else i.push(createAssistantTextMessage(n));return{type:"text_response",content:n,messages:i}}async run(e,t={}){let{maxIterations:r=5}=t,a=Array.isArray(e)?[...e]:[createUserMessage(e)],s=this.#e.getEventEmitter();for(let o=0;o<r;o++){let n=o===r-1;n&&s.emit("tool_warning",{message:`Maximum tool iteration limit (${r}) reached. Forcing model to generate final text response.`});let i=this.step(a,{forceTextResponse:n}),p=await i.next();if(p.done)return p.value.content;let{calls:l}=p.value,m=await executeTools(l,this.#g);if(a=(p=await i.next(m)).value.messages,p.value.content)return p.value.content}return"The model reached the maximum tool iteration limit and could not provide a final text response."}#j(o){let n=[...o];this.#i&&!o.some(e=>"system_message"===e.type)&&n.unshift(createSystemMessage(this.#i));let i={profile:this.#f,prompt:`js-sdk-prompt-${Date.now()}`,chat:{messages:n}},p=buildParametersArray(this.#h,this.#g,this.#f,this.#e.getEventEmitter());return p&&(i.parameters=p),i}}export class ChatAPI{#e;constructor(e){this.#e=e}session(e){if(!e||"string"!=typeof e)throw Error("A valid model profile string is required to start a chat session.");return new ChatSession(this.#e,e)}}export class TaskAPI{#e;constructor(e){this.#e=e}async roster(){let e=await this.#e._fetchWithRetry("/task/roster",{method:"GET"});return e.json()}async *stream(e,r){let{taskId:a,tag:s}=this.#k(e),o={};s&&(o["Grazie-Task-Tag"]=s);let n=await this.#e._fetchWithRetry(`/task/stream/v4/${a}`,{method:"POST",body:JSON.stringify({parameters:r}),headers:o}),i=new TaskSSEParser,p=n.body.pipeThrough(new t),l="";for await(let m of p){l+=m;let O=l.split("\n");for(let u of(l=O.pop()||"",O))if(u.trim()){let E=i.parseLine(u);E&&(yield E)}}if(l.trim()){let h=i.parseLine(l);h&&(yield h)}}async execute(e,t){let r=this.stream(e,t),a="",s=[],o=null,n=null,i=null,p=null;for await(let l of r)switch(l.type){case"Content":a+=l.content;break;case"QuotaMetadata":o=l.data;break;case"ExecutionMetadata":s.push(l.data);break;case"FinishMetadata":n=l.data;break;case"UnknownMetadata":i=l.data;break;case"FunctionCallMetadata":p=l.data}return{content:a,quotaMetadata:o,executionMetadata:s,finishMetadata:n,unknownMetadata:i,functionCallMetadata:p}}#k(l){let m=l.split(":",2);return{taskId:m[0],tag:m[1]||null}}}function buildParametersArray(e,t=[],r="",a=null){let s=[],o=modelProfiles[r];if(t.length>0&&(!o||o.params.has(LLMParameters.TOOLS.fqdn))){s.push({type:LLMParameters.TOOLS.type,fqdn:LLMParameters.TOOLS.fqdn});let n=t.map(({execute:e,...t})=>t);s.push({type:"json",value:JSON.stringify(n)})}for(let[i,p]of Object.entries(e)){let l=LLMParameters[i];if(!l)continue;if(o&&!o.params.has(l.fqdn)){a&&a.emit("parameter_warning",{parameter:i,profile:r,message:`Parameter '${i}' is not supported by model profile '${r}' and will be ignored.`});continue}s.push({type:l.type,fqdn:l.fqdn});let m={type:l.type};switch(l.type){case"double":case"int":m.value=Number(p);break;case"bool":m.value=Boolean(p);break;case"json":m.value=JSON.stringify(p);break;default:m.value=String(p)}s.push(m)}return s.length>0?{data:s}:null}export class MerciClient extends e{chat;tasks;constructor(e={}){super();let t=new InternalHttpClient(e,this);this.chat=new ChatAPI(t),this.tasks=new TaskAPI(t)}}