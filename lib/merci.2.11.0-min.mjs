/**
 * @file The JavaScript SDK for the JetBrains AI Platform.
 * @version 2.11.0 (Final Fix: Implemented Model-Aware Parameter Filtering)
 * @author Lukáš Michna
 * @license Apache-2.0
 *
 * @description
 * This module provides a comprehensive, modern, and developer-friendly interface for interacting
 * with the JetBrains AI suite of Large Language Models (LLMs). It features a fluent API for building
 * requests, robust error handling, automatic token management, and seamless support for streaming,
 * tool use, media messages, and advanced model parameters. This version is compliant with the v8 Chat API.
 *
 * CHANGELOG:
 * - v2.11.0: Implemented a robust parameter filtering system. The SDK now contains accurate model profiles based on
 *   official documentation and will automatically filter out any parameters not supported by the selected model,
 *   issuing a console warning. This definitively solves the tool-use errors with Gemini models.
 */ import{EventEmitter as e}from"node:events";import{TextDecoderStream as t}from"node:stream/web";import{promises as r}from"node:fs";import{lookup as a}from"mime-types";import{extname as s}from"node:path";export const LLMParameters={TEMPERATURE:{fqdn:"llm.parameters.temperature",type:"double"},TOP_P:{fqdn:"llm.parameters.top-p",type:"double"},TOP_K:{fqdn:"llm.parameters.top-k",type:"int"},LENGTH:{fqdn:"llm.parameters.length",type:"int"},STOP_TOKEN:{fqdn:"llm.parameters.stop-token",type:"text"},SEED:{fqdn:"llm.parameters.seed",type:"int"},RESPONSE_FORMAT:{fqdn:"llm.parameters.response-format",type:"json"},TOOLS:{fqdn:"llm.parameters.tools",type:"json"},TOOL_CHOICE_AUTO:{fqdn:"llm.parameters.tool-choice-auto",type:"bool"},TOOL_CHOICE_REQUIRED:{fqdn:"llm.parameters.tool-choice-required",type:"bool"},TOOL_CHOICE_NONE:{fqdn:"llm.parameters.tool-choice-none",type:"bool"},TOOL_CHOICE_NAMED:{fqdn:"llm.parameters.tool-choice-named",type:"json"},PARALLEL_TOOL_CALLS:{fqdn:"llm.parameters.parallel-tool-calls",type:"bool"},REASONING_EFFORT:{fqdn:"llm.parameters.reasoning-effort",type:"text"},PREDICTED_OUTPUT:{fqdn:"llm.parameters.predicted-output",type:"json"},CACHE_POINTS:{fqdn:"llm.parameters.cache-points",type:"json"},THINKING_BUDGET:{fqdn:"llm.parameters.thinking-budget",type:"int"},NUMBER_OF_CHOICES:{fqdn:"llm.parameters.number-of-choices",type:"int"},VERBOSITY:{fqdn:"llm.parameters.verbosity",type:"text"}};let paramGroups={COMMON_TOOLS:["TOOLS","TOOL_CHOICE_NAMED","TOOL_CHOICE_AUTO","TOOL_CHOICE_REQUIRED","TOOL_CHOICE_NONE"].map(e=>LLMParameters[e].fqdn),OPENAI_GPT3_4:["TEMPERATURE","TOP_P","SEED","LENGTH","NUMBER_OF_CHOICES","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn),OPENAI_O_SERIES:["LENGTH","SEED","RESPONSE_FORMAT","REASONING_EFFORT","NUMBER_OF_CHOICES"].map(e=>LLMParameters[e].fqdn),OPENAI_GPT4_1:["TOP_P","LENGTH","SEED","TEMPERATURE","RESPONSE_FORMAT","NUMBER_OF_CHOICES","PREDICTED_OUTPUT","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn),OPENAI_GPT5:["LENGTH","RESPONSE_FORMAT","PARALLEL_TOOL_CALLS","REASONING_EFFORT","VERBOSITY"].map(e=>LLMParameters[e].fqdn),ANTHROPIC_CLAUDE3:["TEMPERATURE","TOP_K","TOP_P","STOP_TOKEN","LENGTH","TOOLS"].map(e=>LLMParameters[e].fqdn),ANTHROPIC_CLAUDE_PLUS:["TEMPERATURE","TOP_P","STOP_TOKEN","LENGTH","CACHE_POINTS","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_1_5_PRO:["TEMPERATURE","TOP_P","TOP_K","RESPONSE_FORMAT","LENGTH"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_1_5_FLASH:["TEMPERATURE","TOP_P","TOP_K","LENGTH"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_2_5_PRO:["TEMPERATURE","TOP_P","TOP_K","RESPONSE_FORMAT","LENGTH","THINKING_BUDGET","TOOLS"].map(e=>LLMParameters[e].fqdn),GOOGLE_GEMINI_2_5_FLASH:["RESPONSE_FORMAT","TEMPERATURE","LENGTH","TOP_P","THINKING_BUDGET"].map(e=>LLMParameters[e].fqdn)},modelProfiles={"openai-chat-gpt":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS])},"openai-gpt-4":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS])},"openai-gpt-4-turbo":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS,LLMParameters.RESPONSE_FORMAT.fqdn])},"openai-gpt-4o":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS,LLMParameters.RESPONSE_FORMAT.fqdn,LLMParameters.PREDICTED_OUTPUT.fqdn])},"openai-gpt-4o-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT3_4,...paramGroups.COMMON_TOOLS,LLMParameters.RESPONSE_FORMAT.fqdn,LLMParameters.PREDICTED_OUTPUT.fqdn])},"openai-o1":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-o1-mini":{provider:"OpenAI",params:new Set(["LENGTH","SEED","NUMBER_OF_CHOICES"].map(e=>LLMParameters[e].fqdn))},"openai-o3":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-o3-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-o4-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_O_SERIES,...paramGroups.COMMON_TOOLS])},"openai-gpt4.1":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT4_1,...paramGroups.COMMON_TOOLS])},"openai-gpt4.1-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT4_1,...paramGroups.COMMON_TOOLS])},"openai-gpt4.1-nano":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT4_1,...paramGroups.COMMON_TOOLS])},"openai-gpt-5":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},"openai-gpt-5-mini":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},"openai-gpt-5-nano":{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},Grazie_model_1:{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},Grazie_model_2:{provider:"OpenAI",params:new Set([...paramGroups.OPENAI_GPT5,...paramGroups.COMMON_TOOLS])},"openai-instruct-gpt":{provider:"OpenAI",params:new Set([LLMParameters.TEMPERATURE.fqdn])},"openai-embedding-ada":{provider:"OpenAI",params:new Set},"openai-embedding-small":{provider:"OpenAI",params:new Set},"openai-embedding-large":{provider:"OpenAI",params:new Set},"anthropic-claude-3-haiku":{provider:"Anthropic",params:new Set(paramGroups.ANTHROPIC_CLAUDE3)},"anthropic-claude-3-opus":{provider:"Anthropic",params:new Set(paramGroups.ANTHROPIC_CLAUDE3)},"anthropic-claude-3.5-haiku":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-3.5-sonnet":{provider:"Anthropic",params:new Set(["TEMPERATURE","TOP_P","STOP_TOKEN","LENGTH","PARALLEL_TOOL_CALLS"].map(e=>LLMParameters[e].fqdn).concat(paramGroups.COMMON_TOOLS))},"anthropic-claude-3.7-sonnet":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-4-sonnet":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-4-opus":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"anthropic-claude-4.1-opus":{provider:"Anthropic",params:new Set([...paramGroups.ANTHROPIC_CLAUDE_PLUS,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-pro-1.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_PRO,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-1.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_FLASH,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-2.0":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_PRO,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-lite-2.0":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_1_5_PRO,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-pro-2.5":{provider:"Google",params:new Set(paramGroups.GOOGLE_GEMINI_2_5_PRO)},"google-chat-gemini-flash-2.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_2_5_FLASH,...paramGroups.COMMON_TOOLS])},"google-chat-gemini-flash-lite-2.5":{provider:"Google",params:new Set([...paramGroups.GOOGLE_GEMINI_2_5_FLASH,...paramGroups.COMMON_TOOLS])}};class APIError extends Error{constructor(e,t,r){super(e),this.name="APIError",this.status=t,this.details=r}}class ParameterBuilder{#a={};temperature(e){if("number"!=typeof e||e<0||e>2)throw Error(`[SDK Validation] Temperature must be a number between 0.0 and 2.0. Received: ${e}`);return this.#a.TEMPERATURE=e,this}topP(e){if("number"!=typeof e||e<0||e>1)throw Error(`[SDK Validation] Top-P must be a number between 0.0 and 1.0. Received: ${e}`);return this.#a.TOP_P=e,this}topK(e){if(!Number.isInteger(e)||e<=0)throw Error(`[SDK Validation] Top-K must be a positive integer. Received: ${e}`);return this.#a.TOP_K=e,this}length(e){if(!Number.isInteger(e)||e<=0)throw Error(`[SDK Validation] Length must be a positive integer. Received: ${e}`);return this.#a.LENGTH=e,this}stopToken(e){if("string"!=typeof e||0===e.length)throw Error("[SDK Validation] Stop Token must be a non-empty string.");return this.#a.STOP_TOKEN=e,this}seed(e){if(!Number.isInteger(e))throw Error(`[SDK Validation] Seed must be an integer. Received: ${e}`);return this.#a.SEED=e,this}asJson(){return this.#a.RESPONSE_FORMAT={type:"json"},this}toolChoiceAuto(e=!0){if("boolean"!=typeof e)throw Error("[SDK Validation] toolChoiceAuto expects a boolean value.");return this.#a.TOOL_CHOICE_AUTO=e,this}toolChoiceRequired(e=!0){if("boolean"!=typeof e)throw Error("[SDK Validation] toolChoiceRequired expects a boolean value.");return this.#a.TOOL_CHOICE_REQUIRED=e,this}toolChoiceNone(e=!0){if("boolean"!=typeof e)throw Error("[SDK Validation] toolChoiceNone expects a boolean value.");return this.#a.TOOL_CHOICE_NONE=e,this}toolChoiceNamed(e){if("string"!=typeof e||0===e.length)throw Error("[SDK Validation] toolChoiceNamed expects a non-empty tool name string.");return this.#a.TOOL_CHOICE_NAMED={type:"function",function:{name:e}},this}parallelToolCalls(e=!0){if("boolean"!=typeof e)throw Error("[SDK Validation] parallelToolCalls expects a boolean value.");return this.#a.PARALLEL_TOOL_CALLS=e,this}reasoningEffort(e){let t=new Set(["low","medium","high"]);if(!t.has(e))throw Error(`[SDK Validation] Reasoning Effort must be one of 'low', 'medium', or 'high'. Received: ${e}`);return this.#a.REASONING_EFFORT=e,this}predictedOutput(e){if("string"!=typeof e)throw Error("[SDK Validation] Predicted Output expects a string value.");return this.#a.PREDICTED_OUTPUT=e,this}cachePoints(e){if("object"!=typeof e||null===e)throw Error("[SDK Validation] Cache Points expects a JSON-compatible object.");return this.#a.CACHE_POINTS=e,this}thinkingBudget(e){if(!Number.isInteger(e)||e<=0)throw Error(`[SDK Validation] Thinking Budget must be a positive integer. Received: ${e}`);return this.#a.THINKING_BUDGET=e,this}numberOfChoices(e){if(!Number.isInteger(e)||e<=0)throw Error(`[SDK Validation] Number of Choices must be a positive integer. Received: ${e}`);return this.#a.NUMBER_OF_CHOICES=e,this}verbosity(e){if("string"!=typeof e||0===e.length)throw Error("[SDK Validation] Verbosity must be a non-empty string.");return this.#a.VERBOSITY=e,this}_build(){return this.#a}}export class MerciClient extends e{#b;#c="https://api.jetbrains.ai/user/v5";constructor({token:e}){if(super(),!e)throw Error("A Grazie authentication token is required.");this.#b=e}chat(e){return new ChatSession(this,e)}async _fetchWithRetry(e,t,r=!1){let a=`${this.#c}${e}`,s={"Content-Type":"application/json","Grazie-Agent":JSON.stringify({name:"js-library-client",version:"2.11.0"}),"Grazie-Authenticate-JWT":this.#b,...t.headers};this.emit("api_request",{url:a,method:t.method,body:t.body});let o=await fetch(a,{...t,headers:s});if(this.emit("api_response",{url:a,status:o.status,ok:o.ok}),!o.ok){if(401===o.status&&!r)try{this.emit("token_refresh_start");let i=await this._refreshToken();return this.#b=i,this.emit("token_refresh_success",i),this._fetchWithRetry(e,t,!0)}catch(n){throw this.emit("error",n),n}let p;try{p=await o.json()}catch(l){p={message:"Failed to parse error response from API.",responseText:await o.text().catch(()=>"")}}let m=new APIError(`API request failed with status ${o.status}`,o.status,p);throw this.emit("error",m),m}if(!o.body){let O=new APIError("API returned a successful status but with an empty response body.",o.status,null);throw this.emit("error",O),O}return o}async _refreshToken(){let e=await this._fetchWithRetry("/auth/jwt/refresh/v3",{method:"POST",body:JSON.stringify({})}),t=await e.json();if(!t.token)throw new APIError("Token refresh response did not contain a new token.",e.status,t);return t.token}}class ChatSession{#d;#e;#f=[];#g={};#h=null;#i=5;constructor(e,t){this.#d=e,this.#e=t}withTools(e){return this.#f=e.map(e=>createValidatedTool(e)),this}withSystemMessage(e){return this.#h=e,this}withParameters(e){let t=new ParameterBuilder;return this.#g=e(t)._build(),this}getSupportedParameters(){let e=modelProfiles[this.#e];return e?.params?Object.entries(LLMParameters).filter(([,t])=>e.params.has(t.fqdn)).map(([e,t])=>({name:e,type:t.type,fqdn:t.fqdn})):[]}async *stream(e,r={}){let a=Array.isArray(e)?e:[createUserMessage(e)],s=this.#j(a,r),o=await this.#d._fetchWithRetry("/llm/chat/stream/v8",{method:"POST",body:JSON.stringify(s)}),i=new SSEParser,n=o.body.pipeThrough(new t),p="";for await(let l of n){p+=l;let m=p.split("\n");for(let O of(p=m.pop()||"",m))if(O.trim()){let u=i.parseLine(O);u&&(yield u)}}if(p.trim()){let h=i.parseLine(p);h&&(yield h)}let d=i.getFinalResult();d.toolCalls.length>0&&(yield{type:"tool_calls",calls:d.toolCalls})}async run(e){let t=Array.isArray(e)?e:[createUserMessage(e)],r="";for(let a=0;a<this.#i;a++){let s=0===a,o=this.stream(t,{isFirstTurn:s}),i=[],n="";for await(let p of o)"text"===p.type?n+=p.content:"tool_calls"===p.type&&(i=p.calls);if(!(i.length>0))return n;{this.#d.emit("tool_start",{calls:i});let l=await executeTools(i,this.#f);this.#d.emit("tool_finish",{results:l});let m=[];l.forEach((e,t)=>{let r=i[t],a=e.success?e.result:{error:e.error||"Unknown execution error"};m.push(createAssistantToolCallMessage(r.id,r.name,r.arguments)),m.push(createToolResultMessage(r.id,r.name,JSON.stringify(a)))}),t.push(...m)}}throw Error(`Exceeded maximum tool iteration limit of ${this.#i}.`)}#j(o,{isFirstTurn:i=!0}={}){let n=[...o];this.#h&&!o.some(e=>"system_message"===e.type)&&n.unshift(createSystemMessage(this.#h));let p={profile:this.#e,prompt:`js-sdk-prompt-${Date.now()}`,chat:{messages:n}},l=i?this.#g:{},m=buildParametersArray(l,this.#f,this.#e,this.#d);return m&&(p.parameters=m),p}}class SSEParser{constructor(){this.finalizedToolCalls=[],this.toolCallsInProgress=new Map}parseLine(e){if(!e.startsWith("data: "))return null;let t=e.substring(6);if("end"===t.trim())return null;try{let r=JSON.parse(t);switch(r.type){case"Content":return{type:"text",content:r.content};case"ToolCall":let a=r.parallelToolIndex??0;this.toolCallsInProgress.has(a)||this.toolCallsInProgress.set(a,{id:null,name:null,arguments:""});let s=this.toolCallsInProgress.get(a);return r.id&&(s.id=r.id),r.name&&(s.name=r.name),r.content&&(s.arguments+=r.content),null;case"FinishMetadata":if(["tool_call","tool_calls","stop"].includes(r.reason)){let o=Array.from(this.toolCallsInProgress.entries()).sort(([e],[t])=>e-t).map(([,e])=>e);this.finalizedToolCalls.push(...o),this.toolCallsInProgress.clear()}return null;case"QuotaMetadata":return{type:"quota",data:r};default:return null}}catch(i){return null}}getFinalResult(){return{toolCalls:this.finalizedToolCalls}}}function buildParametersArray(e,t=[],r="",a=null){let s=[],o=modelProfiles[r];if(t.length>0&&(!o||o.params.has(LLMParameters.TOOLS.fqdn))){s.push({type:LLMParameters.TOOLS.type,fqdn:LLMParameters.TOOLS.fqdn});let i=t.map(({execute:e,...t})=>t);s.push({type:"json",value:JSON.stringify(i)})}for(let[n,p]of Object.entries(e)){let l=LLMParameters[n];if(!l)continue;if(o&&!o.params.has(l.fqdn)){a&&a.emit("parameter_warning",{parameter:n,profile:r,message:`Parameter '${n}' is not supported by model profile '${r}' and will be ignored.`});continue}s.push({type:l.type,fqdn:l.fqdn});let m={type:l.type};switch(l.type){case"double":case"int":m.value=Number(p);break;case"bool":m.value=Boolean(p);break;case"json":m.value=JSON.stringify(p);break;default:m.value=String(p)}s.push(m)}return s.length>0?{data:s}:null}function validateSchema(e,t,r=[],a=[]){if("object"!==t.type||null===e||"object"!=typeof e){t.required?.length>0&&a.push({path:r.join("."),message:`Expected an object but received ${typeof e}.`});return}for(let s of t.required||[])s in e||a.push({path:[...r,s].join("."),message:`Required key '${s}' is missing.`});for(let[o,i]of Object.entries(e)){let n=t.properties?.[o];if(!n)continue;let p=[...r,o].join("."),l=Array.isArray(i)?"array":typeof i;if(l!==n.type){a.push({path:p,message:`Invalid type. Expected '${n.type}' but got '${l}'.`});continue}"object"===n.type&&n.properties&&validateSchema(i,n,[...r,o],a),"array"===n.type&&n.items&&i.forEach((e,t)=>{let r=typeof e;r!==n.items.type&&a.push({path:`${p}[${t}]`,message:`Invalid item type. Expected '${n.items.type}' but got '${r}'.`})})}}function createValidatedTool(e){let{name:t,description:r,parameters:a,execute:s}=e,o=a.schema||a,i=e=>{let t=[];return(validateSchema(e,o,[],t),t.length>0)?{status:"Tool execution failed due to validation errors.",verification:{isValid:!1,errors:t},data:e}:s(e)};return{name:t,description:r,parameters:{schema:o},execute:i}}export async function executeTools(e,t){let r=new Map(t.map(e=>[e.name,e])),a=e.map(async e=>{let t=r.get(e.name);if(!t?.execute)return{name:e.name,success:!1,error:`Tool '${e.name}' not found.`};try{let a=JSON.parse(e.arguments||"{}"),s=await t.execute(a);return{name:e.name,success:!0,result:s}}catch(o){return{name:e.name,success:!1,error:o.message}}});return Promise.all(a)}export function createUserMessage(e){return{type:"user_message",content:e}}export function createSystemMessage(e){return{type:"system_message",content:e}}export function createAssistantTextMessage(e){return{type:"assistant_message_text",content:e}}export function createAssistantToolCallMessage(e,t,r){return{type:"assistant_message_tool",id:e,toolName:t,content:r}}export function createToolResultMessage(e,t,r){return{type:"tool_message",id:e,toolName:t,result:r}}export async function createMediaMessage(e,t){let o,i;if("string"==typeof e){if(o=await r.readFile(e),t)i=t;else{let n=a(e);if(n)i=n;else{let p=s(e).toLowerCase();i=({".png":"image/png",".jpg":"image/jpeg",".jpeg":"image/jpeg",".gif":"image/gif",".webp":"image/webp"})[p]||"application/octet-stream"}}}else if(Buffer.isBuffer(e)){if(!t)throw Error("[SDK Validation] explicitMimeType is required when creating a media message from a Buffer.");o=e,i=t}else throw Error("[SDK Validation] source must be a file path (string) or a Buffer.");return{type:"media_message",mediaType:i,data:o.toString("base64")}}